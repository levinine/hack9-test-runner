{
	"info": {
		"_postman_id": "3d0bea70-2a0d-4fdc-8b1a-ae04a104fa23",
		"name": "Hack9 functional tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "price",
			"item": [
				{
					"name": "Get call price for the given phone number with correct time in the past Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed45f58a-bb17-4ec9-bddb-19f3466af5b5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"pm.test(\"Test price prefix\", function () {",
									"    pm.expect(data.prefix.toString()).to.be.eql(pm.variables.get(\"prefixCallResult\").toString());",
									"});",
									"",
									"pm.test(\"Test price\", function () {",
									"    pm.expect(data.price.toNumber().toFixed(2)).to.be.eql(pm.variables.get(\"priceCallResult\").toFixed(2));",
									"});",
									"",
									"pm.test(\"Test the date price is valid from\", function () {",
									"    pm.expect(data.from.toString()).to.be.eql(pm.variables.get(\"fromCallResult\").toString());",
									"});",
									"",
									"pm.test(\"Test price initial\", function () {",
									"    pm.expect(data.initial.toString()).to.be.eql(pm.variables.get(\"initialCallResult\").toString());",
									"});",
									"",
									"pm.test(\"Test price increment\", function () {",
									"    pm.expect(data.increment.toString()).to.be.eql(pm.variables.get(\"incrementCallResult\").toString());",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/switch/price?number={{numberInput}}&time={{startDateInput}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"switch",
								"price"
							],
							"query": [
								{
									"key": "number",
									"value": "{{numberInput}}"
								},
								{
									"key": "time",
									"value": "{{startDateInput}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "call",
			"item": [
				{
					"name": "Register call",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9d274676-6bb6-412d-92d1-b7f9db0f2ae9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f09918af-4823-44a1-b82d-60e46471cf1f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.calling.toString()).to.be.eql(pm.variables.get(\"callCalling\").toString());",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.called.toString()).to.be.eql(pm.variables.get(\"callCalled\").toString());",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.start.toString()).to.be.eql(pm.variables.get(\"callStart\").toString());",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.duration.toString()).to.be.eql(pm.variables.get(\"callDuration\").toString());",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.rounded.toString()).to.be.eql(pm.variables.get(\"callRounded\").toString());",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.price.toNumber().toFixed(2)).to.be.eql(pm.variables.get(\"callPrice\").toFixed(2).toString());",
									"});",
									"",
									"pm.test(\"Test calling number from result body\", function () {",
									"    pm.expect(data.cost.toNumber().toFixed(2)).to.be.eql(pm.variables.get(\"callCost\").toFixed(2).toString());",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"calling\" : \"{{callCalling}}\",\n\t\"called\" : \"{{callCalled}}\",\n\t\"start\" : \"{{callStart}}\",\n\t\"duration\" : \"{{callDuration}}\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/switch/call",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"switch",
								"call"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "listing",
			"item": [
				{
					"name": "Get listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65f139c0-aba1-46aa-87eb-1f6f277381b4",
								"exec": [
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    var data = JSON.parse(responseBody);",
									"    tests[\"Check number of calls in listing: \" + data.calls.length] = data.calls.length === pm.variables.get(\"numberOfCalls\") ;",
									"    ",
									"    ",
									"    var numberOfCalls = pm.variables.get(\"numberOfCalls\");",
									"    for (var i = 0; i<numberOfCalls; i++){",
									"        ",
									"        var callCalledi=\"callCalled\"+i;",
									"        var callStarti=\"callStart\"+i;",
									"        var callDurationi=\"callDuration\"+i;",
									"        var callCosti=\"callCost\"+i;",
									"",
									"",
									"        pm.test(\"Test calling number in listing report\", function () {",
									"            pm.expect(data.calls[i].calling.toString()).to.be.eql(pm.variables.get(\"callCalling\").toString())",
									"        });",
									"",
									"        pm.test(\"Test called number in listing report\", function () {",
									"            pm.expect(data.calls[i].called.toString()).to.be.eql(pm.variables.get(callCalledi).toString())",
									"        });",
									"",
									"        pm.test(\"Test start of the call in listing report\", function () {",
									"            pm.expect(data.calls[i].start.toString()).to.be.eql(pm.variables.get(callStarti).toString())",
									"        });",
									"",
									"        pm.test(\"Test call duration in listing greport\", function () {",
									"            pm.expect(data.calls[i].duration.toString()).to.be.eql(pm.variables.get(callDurationi).toString())",
									"        });",
									"",
									"        pm.test(\"Test call cost in the listing report\", function () {",
									"            pm.expect(data.calls[i].cost.toNumber().toFixed(2)).to.eql(pm.variables.get(callCosti).toFixed(2).toString());",
									"        });",
									"",
									"}",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/listing/{{callCalling}}?from={{callsFromDate}}&to={{callsToDate}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"listing",
								"{{callCalling}}"
							],
							"query": [
								{
									"key": "from",
									"value": "{{callsFromDate}}"
								},
								{
									"key": "to",
									"value": "{{callsToDate}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "reset",
			"item": [
				{
					"name": "Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec4d1fae-7173-440b-bc5c-6d9cc74f04ec",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/reset",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"reset"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}